// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int                     @id @default(autoincrement())
  email                 String                  @unique
  name                  String?
  Cash                  Cash[]
  Debt                  Debt[]
  Expense               Expense[]
  Income                Income[]
  IraInvestment         IraInvestment[]
  Retirement            Retirement[]
  Tax                   Tax[]
  TaxDeferredInvestment TaxDeferredInvestment[]
  BrokerageInvestment   BrokerageInvestment[]
}


enum BrokerageContributionStrategy {
  fixed
  percentage_of_income
  max
}

model BrokerageInvestment {
  id                      Int                           @id @default(autoincrement())
  name                    String
  growthRate              Decimal                       @default(0)
  initialBalance          Decimal                       @default(0)
  contributionStrategy    BrokerageContributionStrategy
  contributionPercentage  Decimal                       @default(0)
  contributionFixedAmount Decimal                       @default(0)
  userId                  Int
  user                    User                          @relation(fields: [userId], references: [id])
  Plan                    Plan[]
  planId                  Int?
}

model BrokerageInvestmentTemplate {
  id                      Int                           @id @default(autoincrement())
  name                    String
  growthRate              Decimal                       @default(0)
  initialBalance          Decimal                       @default(0)
  contributionStrategy    BrokerageContributionStrategy
  contributionPercentage  Decimal                       @default(0)
  contributionFixedAmount Decimal                       @default(0)
  PlanTemplate            PlanTemplate[]
  planTemplateId          Int?
}

enum CashMaintenanceStrategy {
  fixedCashReserve
  variableCashReserve
}

model Cash {
  id                      Int                     @id @default(autoincrement())
  name                    String
  initialAmount           Decimal                 @default(0)
  cashMaintenanceStrategy CashMaintenanceStrategy
  reserveAmount           Decimal                 @default(0)
  reserveMonths           Int
  userId                  Int
  user                    User                    @relation(fields: [userId], references: [id])
  Plan                    Plan[]
}

model CashTemplate {
  id                      Int                     @id @default(autoincrement())
  name                    String
  initialAmount           Decimal                 @default(0)
  cashMaintenanceStrategy CashMaintenanceStrategy
  reserveAmount           Decimal                 @default(0)
  reserveMonths           Int
  PlanTemplate            PlanTemplate[]
}

enum DebtPaymentStrategy {
  MINIMUM_PAYMENT
  FIXED_AMOUNT
  PERCENTAGE
}

model Debt {
  id                 Int                 @id @default(autoincrement())
  name               String
  principal          Decimal             @default(0)
  interestRate       Decimal             @default(0)
  paymentMinimum     Decimal             @default(0)
  paymentStrategy    DebtPaymentStrategy
  paymentFixedAmount Decimal             @default(0)
  paymentPercentage  Decimal             @default(0)
  userId             Int
  user               User                @relation(fields: [userId], references: [id])
  Plan               Plan[]
}

model DebtTemplate {
  id                 Int                 @id @default(autoincrement())
  name               String
  principal          Decimal             @default(0)
  interestRate       Decimal             @default(0)
  paymentMinimum     Decimal             @default(0)
  paymentStrategy    DebtPaymentStrategy
  paymentFixedAmount Decimal             @default(0)
  paymentPercentage  Decimal             @default(0)
  PlanTemplate       PlanTemplate[]
  planTemplateId     Int?
}

enum ExpenseType {
  Fixed
  Variable
}

enum Frequency {
  Monthly
  Weekly
  Quarterly
  Annually
  OneTime
}

model Expense {
  id              Int         @id @default(autoincrement())
  name            String
  amount          Decimal     @default(0)
  type            ExpenseType
  frequency       Frequency
  isEssential     Boolean     @default(false)
  isTaxDeductible Boolean     @default(false)
  userId          Int
  user            User        @relation(fields: [userId], references: [id])
  Plan            Plan[]
}

model ExpenseTemplate {
  id              Int            @id @default(autoincrement())
  name            String
  amount          Decimal        @default(0)
  type            ExpenseType
  frequency       Frequency
  isEssential     Boolean        @default(false)
  isTaxDeductible Boolean        @default(false)
  PlanTemplate    PlanTemplate[]
}

enum IncomeType {
  Fixed
  Variable
}

model Income {
  id          Int        @id @default(autoincrement())
  name        String
  grossIncome Decimal    @default(0)
  growthRate  Decimal    @default(0)
  incomeType  IncomeType
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  Plan        Plan[]
}

model IncomeTemplate {
  id           Int            @id @default(autoincrement())
  name         String
  grossIncome  Decimal        @default(0)
  growthRate   Decimal        @default(0)
  incomeType   IncomeType
  PlanTemplate PlanTemplate[]
}

enum IraType {
  taxExempt
  taxDeferred
}

enum IraContributionStrategy {
  fixed
  percentage_of_income
  max
}

model IraInvestment {
  id                      Int                     @id @default(autoincrement())
  name                    String
  iraType                 IraType
  growthRate              Decimal                 @default(0)
  initialBalance          Decimal                 @default(0)
  contributionStrategy    IraContributionStrategy
  contributionPercentage  Decimal                 @default(0)
  contributionFixedAmount Decimal                 @default(0)
  userId                  Int
  user                    User                    @relation(fields: [userId], references: [id])
  Plan                    Plan[]
}

model IraInvestmentTemplate {
  id                      Int                     @id @default(autoincrement())
  name                    String
  iraType                 IraType
  growthRate              Decimal                 @default(0)
  initialBalance          Decimal                 @default(0)
  contributionStrategy    IraContributionStrategy
  contributionPercentage  Decimal                 @default(0)
  contributionFixedAmount Decimal                 @default(0)
  PlanTemplate            PlanTemplate[]
}

enum RetirementStrategy {
  FIRE
  TRADITIONAL
  COAST
}

model Retirement {
  id                       Int                @id @default(autoincrement())
  name                     String
  lifeExpectancy           Int
  retirementStrategy       RetirementStrategy
  retirementWithdrawalRate Decimal            @default(0)
  retirementIncomeGoal     Decimal            @default(0)
  retirementAge            Int
  retirementSavingsAmount  Decimal            @default(0)
  userId                   Int
  user                     User               @relation(fields: [userId], references: [id])
  Plan                     Plan[]
}

model RetirementTemplate {
  id                       Int                @id @default(autoincrement())
  name                     String
  lifeExpectancy           Int
  retirementStrategy       RetirementStrategy
  retirementWithdrawalRate Decimal            @default(0)
  retirementIncomeGoal     Decimal            @default(0)
  retirementAge            Int
  retirementSavingsAmount  Decimal            @default(0)
  PlanTemplate             PlanTemplate[]
}

enum IncomeTaxStrategy {
  simple
}

model Tax {
  id          Int               @id @default(autoincrement())
  taxStrategy IncomeTaxStrategy
  taxRate     Decimal           @default(0)
  userId      Int
  user        User              @relation(fields: [userId], references: [id])
  Plan        Plan[]
}

model TaxTemplate {
  id           Int               @id @default(autoincrement())
  taxStrategy  IncomeTaxStrategy
  taxRate      Decimal           @default(0)
  PlanTemplate PlanTemplate[]
}

enum EmployerContributionStrategy {
  none
  percentage_of_contribution
  percentage_of_compensation
  fixed
}

enum TaxDeferredContributionStrategy {
  none
  until_company_match
  percentage_of_income
  fixed
  max
}

model TaxDeferredInvestment {
  id                                  Int                             @id @default(autoincrement())
  name                                String
  growthRate                          Decimal                         @default(0)
  initialBalance                      Decimal                         @default(0)
  electiveContributionStrategy        TaxDeferredContributionStrategy
  electiveContributionPercentage      Decimal                         @default(0)
  electiveContributionFixedAmount     Decimal                         @default(0)
  employerContributes                 Boolean                         @default(false)
  employerContributionStrategy        EmployerContributionStrategy
  employerCompensationMatchPercentage Decimal                         @default(0)
  employerContributionFixedAmount     Decimal                         @default(0)
  employerMatchPercentage             Decimal                         @default(0)
  employerMatchPercentageLimit        Decimal                         @default(0)
  userId                              Int
  user                                User                            @relation(fields: [userId], references: [id])
  Plan                                Plan[]
}

model TaxDeferredInvestmentTemplate {
  id                                  Int                             @id @default(autoincrement())
  name                                String
  growthRate                          Decimal                         @default(0)
  initialBalance                      Decimal                         @default(0)
  electiveContributionStrategy        TaxDeferredContributionStrategy
  electiveContributionPercentage      Decimal                         @default(0)
  electiveContributionFixedAmount     Decimal                         @default(0)
  employerContributes                 Boolean                         @default(false)
  employerContributionStrategy        EmployerContributionStrategy
  employerCompensationMatchPercentage Decimal                         @default(0)
  employerContributionFixedAmount     Decimal                         @default(0)
  employerMatchPercentage             Decimal                         @default(0)
  employerMatchPercentageLimit        Decimal                         @default(0)
  PlanTemplate                        PlanTemplate[]
}

enum AllowNegativeDisposableIncome {
  none
  minimum_only
  full
}

model Plan {
  id                            Int                           @id @default(autoincrement())
  name                          String
  age                           Int
  year                          Int
  inflationRate                 Decimal                       @default(0)
  allowNegativeDisposableIncome AllowNegativeDisposableIncome

  Cash                   Cash?                   @relation(fields: [cashId], references: [id])
  cashId                 Int?
  incomes                Income[]
  expenses               Expense[]
  debts                  Debt[]
  taxDeferredInvestments TaxDeferredInvestment[]
  brokerageInvestments   BrokerageInvestment[]
  iraInvestments         IraInvestment[]
  Retirement             Retirement?             @relation(fields: [retirementId], references: [id])
  retirementId           Int?
  Tax                    Tax?                    @relation(fields: [taxId], references: [id])
  taxId                  Int?
}

model PlanTemplate {
  id                            Int                           @id @default(autoincrement())
  name                          String
  age                           Int
  year                          Int
  inflationRate                 Decimal                       @default(0)
  allowNegativeDisposableIncome AllowNegativeDisposableIncome

  retirementId Int
  retirement   RetirementTemplate @relation(fields: [retirementId], references: [id])

  cashId Int
  cash   CashTemplate @relation(fields: [cashId], references: [id])

  taxId Int
  tax   TaxTemplate @relation(fields: [taxId], references: [id])

  incomes                IncomeTemplate[]
  expenses               ExpenseTemplate[]
  debts                  DebtTemplate[]
  taxDeferredInvestments TaxDeferredInvestmentTemplate[]
  brokerageInvestments   BrokerageInvestmentTemplate[]
  iraInvestments         IraInvestmentTemplate[]
}
